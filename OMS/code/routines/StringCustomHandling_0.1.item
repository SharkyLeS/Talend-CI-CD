package routines;

import static java.nio.charset.StandardCharsets.*;
import java.nio.charset.Charset;
/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class StringCustomHandling {
	
    private final static int SURR2_FIRST = 0xDC00; 
    private final static int SURR2_LAST = 0xDFFF;
//Broken surrogate pair: first char 0xd83d, second 0x64; illegal combination
	/**
	 * handle Broken surrogate pair
	 * @param s
	 * @return
	 */
	public static String removeBadChars(String label) {
//	    StringBuilder sb = new StringBuilder();
//	    for (int i = 0; i < query.length(); i++) {
//	    	int c = query.charAt(i);
//	        if (c < SURR2_FIRST || c > SURR2_LAST) { 
//	        	
//	        }else{
//	        	sb.append(c);
//	        }
//	    }
//	    return sb.toString();
//		byte ptext[] = query.getBytes(ISO_8859_1); 
//		String value = new String(ptext, UTF_8); 
//		return value;
		Charset charset = Charset.forName("UTF-8");
		label = charset.decode(charset.encode(label)).toString();
		return label;
		
	}
}
